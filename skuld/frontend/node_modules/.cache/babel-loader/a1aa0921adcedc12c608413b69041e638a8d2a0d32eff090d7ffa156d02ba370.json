{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\GitHub\\\\skuld\\\\skuld\\\\frontend\\\\src\\\\components\\\\Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Logs.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Logs() {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchLogs();\n    // Atualiza os logs a cada 30 segundos\n    const interval = setInterval(fetchLogs, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  const fetchLogs = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('http://localhost:5000/api/executions');\n      const data = await response.json();\n      setLogs(data);\n      setError(null);\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n      setError('Failed to load logs. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatDateTime = dateString => {\n    const options = {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    };\n    return new Date(dateString).toLocaleString(undefined, options);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Execution Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: fetchLogs,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logs-table\",\n        children: logs.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: \"No execution logs found. Logs will appear here when schedules are executed.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Execution Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Schedule Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Response\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: logs.map(log => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatDateTime(log.executedAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: log.scheduleName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status-badge ${log.status}`,\n                  children: log.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"response-cell\",\n                  children: log.response ? /*#__PURE__*/_jsxDEV(\"details\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n                      children: \"View Response\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                      children: log.response\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-response\",\n                    children: \"No response\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this)]\n            }, log.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Logs, \"7cUBf/5kxDf7xSVzqIv9oFmaTIo=\");\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Logs","_s","logs","setLogs","loading","setLoading","error","setError","fetchLogs","interval","setInterval","clearInterval","response","fetch","data","json","console","formatDateTime","dateString","options","year","month","day","hour","minute","second","Date","toLocaleString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","log","executedAt","scheduleName","status","id","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/GitHub/skuld/skuld/frontend/src/components/Logs.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Logs.css';\r\n\r\nfunction Logs() {\r\n    const [logs, setLogs] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchLogs();\r\n        // Atualiza os logs a cada 30 segundos\r\n        const interval = setInterval(fetchLogs, 30000);\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const fetchLogs = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const response = await fetch('http://localhost:5000/api/executions');\r\n            const data = await response.json();\r\n            setLogs(data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error('Error fetching logs:', error);\r\n            setError('Failed to load logs. Please try again later.');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const formatDateTime = (dateString) => {\r\n        const options = {\r\n            year: 'numeric',\r\n            month: '2-digit',\r\n            day: '2-digit',\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            second: '2-digit'\r\n        };\r\n        return new Date(dateString).toLocaleString(undefined, options);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"logs-container\">\r\n                <div className=\"loading-spinner\">Loading...</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return (\r\n            <div className=\"logs-container\">\r\n                <div className=\"error-message\">{error}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"logs-container\">\r\n            <div className=\"page-header\">\r\n                <h1>Execution Logs</h1>\r\n                <button className=\"refresh-button\" onClick={fetchLogs}>\r\n                    Refresh\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"content-section\">\r\n                <div className=\"logs-table\">\r\n                    {logs.length === 0 ? (\r\n                        <div className=\"empty-state\">\r\n                            No execution logs found. Logs will appear here when schedules are executed.\r\n                        </div>\r\n                    ) : (\r\n                        <table>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Execution Time</th>\r\n                                    <th>Schedule Name</th>\r\n                                    <th>Status</th>\r\n                                    <th>Response</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {logs.map((log) => (\r\n                                    <tr key={log.id}>\r\n                                        <td>{formatDateTime(log.executedAt)}</td>\r\n                                        <td>{log.scheduleName}</td>\r\n                                        <td>\r\n                                            <span className={`status-badge ${log.status}`}>\r\n                                                {log.status}\r\n                                            </span>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div className=\"response-cell\">\r\n                                                {log.response ? (\r\n                                                    <details>\r\n                                                        <summary>View Response</summary>\r\n                                                        <pre>{log.response}</pre>\r\n                                                    </details>\r\n                                                ) : (\r\n                                                    <span className=\"no-response\">No response</span>\r\n                                                )}\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}