{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Documents\\\\GitHub\\\\skuld\\\\skuld\\\\frontend\\\\src\\\\components\\\\Schedules.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Schedules.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Schedules = () => {\n  _s();\n  const [schedules, setSchedules] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    cronExpression: '',\n    url: '',\n    method: 'GET'\n  });\n  const cronPatterns = [{\n    label: 'Select a pattern...',\n    value: ''\n  }, {\n    label: 'Every minute',\n    value: '* * * * *'\n  }, {\n    label: 'Every 5 minutes',\n    value: '*/5 * * * *'\n  }, {\n    label: 'Every 15 minutes',\n    value: '*/15 * * * *'\n  }, {\n    label: 'Every 30 minutes',\n    value: '*/30 * * * *'\n  }, {\n    label: 'Every hour',\n    value: '0 * * * *'\n  }, {\n    label: 'Every day at midnight',\n    value: '0 0 * * *'\n  }, {\n    label: 'Every Sunday at midnight',\n    value: '0 0 * * 0'\n  }, {\n    label: 'Every month on the 1st at midnight',\n    value: '0 0 1 * *'\n  }];\n  useEffect(() => {\n    fetchSchedules();\n  }, []);\n  const fetchSchedules = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/schedules');\n      const data = await response.json();\n      setSchedules(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Erro ao buscar agendamentos:', error);\n      setError(error.message);\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/schedules', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        throw new Error('Error creating schedule');\n      }\n      await fetchSchedules();\n      setFormData({\n        name: '',\n        cronExpression: '',\n        url: '',\n        method: 'GET'\n      });\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`/api/schedules/${id}`, {\n        method: 'DELETE'\n      });\n      if (!response.ok) {\n        throw new Error('Error deleting schedule');\n      }\n      await fetchSchedules();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleCronPatternChange = e => {\n    const selectedPattern = e.target.value;\n    setFormData(prev => ({\n      ...prev,\n      cronExpression: selectedPattern\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedules-container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedules-container\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedules\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agendamentos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedules-list\",\n      children: schedules.map(schedule => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schedule-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: schedule.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pr\\xF3xima execu\\xE7\\xE3o: \", new Date(schedule.next_run).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", schedule.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, schedule.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(Schedules, \"GzVcZ5egNF3Kr3NrjA4V+kUQtUU=\");\n_c = Schedules;\nexport default Schedules;\nvar _c;\n$RefreshReg$(_c, \"Schedules\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Schedules","_s","schedules","setSchedules","loading","setLoading","error","setError","formData","setFormData","name","cronExpression","url","method","cronPatterns","label","value","fetchSchedules","response","fetch","data","json","console","message","handleSubmit","e","preventDefault","headers","body","JSON","stringify","ok","Error","err","handleDelete","id","handleInputChange","target","prev","handleCronPatternChange","selectedPattern","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","schedule","Date","next_run","toLocaleString","status","_c","$RefreshReg$"],"sources":["C:/Users/Lucas/Documents/GitHub/skuld/skuld/frontend/src/components/Schedules.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Schedules.css';\r\n\r\nconst Schedules = () => {\r\n    const [schedules, setSchedules] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        cronExpression: '',\r\n        url: '',\r\n        method: 'GET'\r\n    });\r\n\r\n    const cronPatterns = [\r\n        { label: 'Select a pattern...', value: '' },\r\n        { label: 'Every minute', value: '* * * * *' },\r\n        { label: 'Every 5 minutes', value: '*/5 * * * *' },\r\n        { label: 'Every 15 minutes', value: '*/15 * * * *' },\r\n        { label: 'Every 30 minutes', value: '*/30 * * * *' },\r\n        { label: 'Every hour', value: '0 * * * *' },\r\n        { label: 'Every day at midnight', value: '0 0 * * *' },\r\n        { label: 'Every Sunday at midnight', value: '0 0 * * 0' },\r\n        { label: 'Every month on the 1st at midnight', value: '0 0 1 * *' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetchSchedules();\r\n    }, []);\r\n\r\n    const fetchSchedules = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/schedules');\r\n            const data = await response.json();\r\n            setSchedules(data);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar agendamentos:', error);\r\n            setError(error.message);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('/api/schedules', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error creating schedule');\r\n            }\r\n\r\n            await fetchSchedules();\r\n            setFormData({\r\n                name: '',\r\n                cronExpression: '',\r\n                url: '',\r\n                method: 'GET'\r\n            });\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            const response = await fetch(`/api/schedules/${id}`, {\r\n                method: 'DELETE',\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Error deleting schedule');\r\n            }\r\n\r\n            await fetchSchedules();\r\n        } catch (err) {\r\n            setError(err.message);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            [name]: value\r\n        }));\r\n    };\r\n\r\n    const handleCronPatternChange = (e) => {\r\n        const selectedPattern = e.target.value;\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            cronExpression: selectedPattern\r\n        }));\r\n    };\r\n\r\n    if (loading) {\r\n        return <div className=\"schedules-container\">Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"schedules-container\">Error: {error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"schedules\">\r\n            <h2>Agendamentos</h2>\r\n            <div className=\"schedules-list\">\r\n                {schedules.map((schedule) => (\r\n                    <div key={schedule.id} className=\"schedule-item\">\r\n                        <h3>{schedule.name}</h3>\r\n                        <p>Próxima execução: {new Date(schedule.next_run).toLocaleString()}</p>\r\n                        <p>Status: {schedule.status}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Schedules; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}